//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfQTS_Client.ServiceReferenceQuestion {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibQTS")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string difficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int platformIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string difficulty {
            get {
                return this.difficultyField;
            }
            set {
                if ((object.ReferenceEquals(this.difficultyField, value) != true)) {
                    this.difficultyField = value;
                    this.RaisePropertyChanged("difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int platformId {
            get {
                return this.platformIdField;
            }
            set {
                if ((this.platformIdField.Equals(value) != true)) {
                    this.platformIdField = value;
                    this.RaisePropertyChanged("platformId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                if ((object.ReferenceEquals(this.remarkField, value) != true)) {
                    this.remarkField = value;
                    this.RaisePropertyChanged("remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Platform", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibQTS")]
    [System.SerializableAttribute()]
    public partial class Platform : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Topic", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibQTS")]
    [System.SerializableAttribute()]
    public partial class Topic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceQuestion.IQuestionService")]
    public interface IQuestionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestions", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestions", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionById", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionByIdResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question GetQuestionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionById", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionByIdResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question> GetQuestionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionByTitle", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionByTitleResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question GetQuestionByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionByTitle", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionByTitleResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question> GetQuestionByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionByTitleForUser", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionByTitleForUserResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question GetQuestionByTitleForUser(string title, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionByTitleForUser", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionByTitleForUserResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question> GetQuestionByTitleForUserAsync(string title, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/DeleteQuestion", ReplyAction="http://tempuri.org/IQuestionService/DeleteQuestionResponse")]
        void DeleteQuestion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/DeleteQuestion", ReplyAction="http://tempuri.org/IQuestionService/DeleteQuestionResponse")]
        System.Threading.Tasks.Task DeleteQuestionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/UpdateQuestion", ReplyAction="http://tempuri.org/IQuestionService/UpdateQuestionResponse")]
        void UpdateQuestion(int id, WcfQTS_Client.ServiceReferenceQuestion.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/UpdateQuestion", ReplyAction="http://tempuri.org/IQuestionService/UpdateQuestionResponse")]
        System.Threading.Tasks.Task UpdateQuestionAsync(int id, WcfQTS_Client.ServiceReferenceQuestion.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/CreateQuestion", ReplyAction="http://tempuri.org/IQuestionService/CreateQuestionResponse")]
        void CreateQuestion(WcfQTS_Client.ServiceReferenceQuestion.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/CreateQuestion", ReplyAction="http://tempuri.org/IQuestionService/CreateQuestionResponse")]
        System.Threading.Tasks.Task CreateQuestionAsync(WcfQTS_Client.ServiceReferenceQuestion.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/AddTopicToQuestion", ReplyAction="http://tempuri.org/IQuestionService/AddTopicToQuestionResponse")]
        void AddTopicToQuestion(int questionId, int topicId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/AddTopicToQuestion", ReplyAction="http://tempuri.org/IQuestionService/AddTopicToQuestionResponse")]
        System.Threading.Tasks.Task AddTopicToQuestionAsync(int questionId, int topicId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/RemoveTopicFromQuestion", ReplyAction="http://tempuri.org/IQuestionService/RemoveTopicFromQuestionResponse")]
        void RemoveTopicFromQuestion(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/RemoveTopicFromQuestion", ReplyAction="http://tempuri.org/IQuestionService/RemoveTopicFromQuestionResponse")]
        System.Threading.Tasks.Task RemoveTopicFromQuestionAsync(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopicsForQuestion", ReplyAction="http://tempuri.org/IQuestionService/GetTopicsForQuestionResponse")]
        int[] GetTopicsForQuestion(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopicsForQuestion", ReplyAction="http://tempuri.org/IQuestionService/GetTopicsForQuestionResponse")]
        System.Threading.Tasks.Task<int[]> GetTopicsForQuestionAsync(int questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionsByUserId", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsByUserIdResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestionsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionsByUserId", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsByUserIdResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionsByTagAndUser", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsByTagAndUserResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestionsByTagAndUser(int tagId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionsByTagAndUser", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsByTagAndUserResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsByTagAndUserAsync(int tagId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionsByPlatformAndUser", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsByPlatformAndUserResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestionsByPlatformAndUser(int platformId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetQuestionsByPlatformAndUser", ReplyAction="http://tempuri.org/IQuestionService/GetQuestionsByPlatformAndUserResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsByPlatformAndUserAsync(int platformId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetPlatforms", ReplyAction="http://tempuri.org/IQuestionService/GetPlatformsResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Platform[] GetPlatforms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetPlatforms", ReplyAction="http://tempuri.org/IQuestionService/GetPlatformsResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Platform[]> GetPlatformsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetPlatformById", ReplyAction="http://tempuri.org/IQuestionService/GetPlatformByIdResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Platform GetPlatformById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetPlatformById", ReplyAction="http://tempuri.org/IQuestionService/GetPlatformByIdResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Platform> GetPlatformByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetPlatformByName", ReplyAction="http://tempuri.org/IQuestionService/GetPlatformByNameResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Platform GetPlatformByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetPlatformByName", ReplyAction="http://tempuri.org/IQuestionService/GetPlatformByNameResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Platform> GetPlatformByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopics", ReplyAction="http://tempuri.org/IQuestionService/GetTopicsResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Topic[] GetTopics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopics", ReplyAction="http://tempuri.org/IQuestionService/GetTopicsResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Topic[]> GetTopicsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopicById", ReplyAction="http://tempuri.org/IQuestionService/GetTopicByIdResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Topic GetTopicById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopicById", ReplyAction="http://tempuri.org/IQuestionService/GetTopicByIdResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Topic> GetTopicByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopicByName", ReplyAction="http://tempuri.org/IQuestionService/GetTopicByNameResponse")]
        WcfQTS_Client.ServiceReferenceQuestion.Topic GetTopicByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GetTopicByName", ReplyAction="http://tempuri.org/IQuestionService/GetTopicByNameResponse")]
        System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Topic> GetTopicByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionServiceChannel : WcfQTS_Client.ServiceReferenceQuestion.IQuestionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionServiceClient : System.ServiceModel.ClientBase<WcfQTS_Client.ServiceReferenceQuestion.IQuestionService>, WcfQTS_Client.ServiceReferenceQuestion.IQuestionService {
        
        public QuestionServiceClient() {
        }
        
        public QuestionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsAsync() {
            return base.Channel.GetQuestionsAsync();
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question GetQuestionById(int id) {
            return base.Channel.GetQuestionById(id);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question> GetQuestionByIdAsync(int id) {
            return base.Channel.GetQuestionByIdAsync(id);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question GetQuestionByTitle(string title) {
            return base.Channel.GetQuestionByTitle(title);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question> GetQuestionByTitleAsync(string title) {
            return base.Channel.GetQuestionByTitleAsync(title);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question GetQuestionByTitleForUser(string title, int userId) {
            return base.Channel.GetQuestionByTitleForUser(title, userId);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question> GetQuestionByTitleForUserAsync(string title, int userId) {
            return base.Channel.GetQuestionByTitleForUserAsync(title, userId);
        }
        
        public void DeleteQuestion(int id) {
            base.Channel.DeleteQuestion(id);
        }
        
        public System.Threading.Tasks.Task DeleteQuestionAsync(int id) {
            return base.Channel.DeleteQuestionAsync(id);
        }
        
        public void UpdateQuestion(int id, WcfQTS_Client.ServiceReferenceQuestion.Question question) {
            base.Channel.UpdateQuestion(id, question);
        }
        
        public System.Threading.Tasks.Task UpdateQuestionAsync(int id, WcfQTS_Client.ServiceReferenceQuestion.Question question) {
            return base.Channel.UpdateQuestionAsync(id, question);
        }
        
        public void CreateQuestion(WcfQTS_Client.ServiceReferenceQuestion.Question question) {
            base.Channel.CreateQuestion(question);
        }
        
        public System.Threading.Tasks.Task CreateQuestionAsync(WcfQTS_Client.ServiceReferenceQuestion.Question question) {
            return base.Channel.CreateQuestionAsync(question);
        }
        
        public void AddTopicToQuestion(int questionId, int topicId) {
            base.Channel.AddTopicToQuestion(questionId, topicId);
        }
        
        public System.Threading.Tasks.Task AddTopicToQuestionAsync(int questionId, int topicId) {
            return base.Channel.AddTopicToQuestionAsync(questionId, topicId);
        }
        
        public void RemoveTopicFromQuestion(int questionId) {
            base.Channel.RemoveTopicFromQuestion(questionId);
        }
        
        public System.Threading.Tasks.Task RemoveTopicFromQuestionAsync(int questionId) {
            return base.Channel.RemoveTopicFromQuestionAsync(questionId);
        }
        
        public int[] GetTopicsForQuestion(int questionId) {
            return base.Channel.GetTopicsForQuestion(questionId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetTopicsForQuestionAsync(int questionId) {
            return base.Channel.GetTopicsForQuestionAsync(questionId);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestionsByUserId(int userId) {
            return base.Channel.GetQuestionsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsByUserIdAsync(int userId) {
            return base.Channel.GetQuestionsByUserIdAsync(userId);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestionsByTagAndUser(int tagId, int userId) {
            return base.Channel.GetQuestionsByTagAndUser(tagId, userId);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsByTagAndUserAsync(int tagId, int userId) {
            return base.Channel.GetQuestionsByTagAndUserAsync(tagId, userId);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Question[] GetQuestionsByPlatformAndUser(int platformId, int userId) {
            return base.Channel.GetQuestionsByPlatformAndUser(platformId, userId);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Question[]> GetQuestionsByPlatformAndUserAsync(int platformId, int userId) {
            return base.Channel.GetQuestionsByPlatformAndUserAsync(platformId, userId);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Platform[] GetPlatforms() {
            return base.Channel.GetPlatforms();
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Platform[]> GetPlatformsAsync() {
            return base.Channel.GetPlatformsAsync();
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Platform GetPlatformById(int id) {
            return base.Channel.GetPlatformById(id);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Platform> GetPlatformByIdAsync(int id) {
            return base.Channel.GetPlatformByIdAsync(id);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Platform GetPlatformByName(string name) {
            return base.Channel.GetPlatformByName(name);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Platform> GetPlatformByNameAsync(string name) {
            return base.Channel.GetPlatformByNameAsync(name);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Topic[] GetTopics() {
            return base.Channel.GetTopics();
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Topic[]> GetTopicsAsync() {
            return base.Channel.GetTopicsAsync();
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Topic GetTopicById(int id) {
            return base.Channel.GetTopicById(id);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Topic> GetTopicByIdAsync(int id) {
            return base.Channel.GetTopicByIdAsync(id);
        }
        
        public WcfQTS_Client.ServiceReferenceQuestion.Topic GetTopicByName(string name) {
            return base.Channel.GetTopicByName(name);
        }
        
        public System.Threading.Tasks.Task<WcfQTS_Client.ServiceReferenceQuestion.Topic> GetTopicByNameAsync(string name) {
            return base.Channel.GetTopicByNameAsync(name);
        }
    }
}
